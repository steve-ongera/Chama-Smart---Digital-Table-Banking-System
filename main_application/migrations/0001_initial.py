# Generated by Django 5.2.4 on 2025-10-17 22:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('national_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('role', models.CharField(choices=[('ADMIN', 'Administrator'), ('TREASURER', 'Treasurer'), ('SECRETARY', 'Secretary'), ('MEMBER', 'Member')], default='MEMBER', max_length=20)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('is_verified', models.BooleanField(default=False)),
                ('two_factor_enabled', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('APPROVE', 'Approve'), ('REJECT', 'Reject'), ('PAYMENT', 'Payment'), ('EXPORT', 'Export')], max_length=20)),
                ('model_name', models.CharField(max_length=100)),
                ('object_id', models.CharField(max_length=100)),
                ('changes', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'db_table': 'audit_logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Chama',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('registration_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('contribution_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('100.00'))])),
                ('contribution_frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('BIWEEKLY', 'Bi-Weekly'), ('MONTHLY', 'Monthly')], max_length=20)),
                ('late_payment_penalty', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('loan_interest_rate', models.DecimalField(decimal_places=2, help_text='Annual interest rate in percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('max_members', models.PositiveIntegerField(default=50)),
                ('meeting_day', models.CharField(blank=True, max_length=20)),
                ('meeting_time', models.TimeField(blank=True, null=True)),
                ('meeting_location', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('SUSPENDED', 'Suspended'), ('CLOSED', 'Closed')], default='ACTIVE', max_length=20)),
                ('constitution_document', models.FileField(blank=True, null=True, upload_to='constitutions/')),
                ('bank_account_name', models.CharField(blank=True, max_length=200)),
                ('bank_account_number', models.CharField(blank=True, max_length=50)),
                ('bank_name', models.CharField(blank=True, max_length=100)),
                ('mpesa_paybill', models.CharField(blank=True, max_length=20)),
                ('mpesa_account_number', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='chamas_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Chama',
                'verbose_name_plural': 'Chamas',
                'db_table': 'chamas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChamaMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position_in_rotation', models.PositiveIntegerField()),
                ('membership_number', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Approval'), ('ACTIVE', 'Active'), ('SUSPENDED', 'Suspended'), ('WITHDRAWN', 'Withdrawn')], default='PENDING', max_length=20)),
                ('joined_date', models.DateField(auto_now_add=True)),
                ('exit_date', models.DateField(blank=True, null=True)),
                ('has_received_payout', models.BooleanField(default=False)),
                ('payout_received_date', models.DateField(blank=True, null=True)),
                ('total_contributed', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('chama', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='main_application.chama')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Chama Membership',
                'verbose_name_plural': 'Chama Memberships',
                'db_table': 'chama_memberships',
                'ordering': ['chama', 'position_in_rotation'],
            },
        ),
        migrations.CreateModel(
            name='ContributionCycle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cycle_number', models.PositiveIntegerField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('expected_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('collected_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('payout_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('payout_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('UPCOMING', 'Upcoming'), ('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='UPCOMING', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('beneficiary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='beneficiary_cycles', to='main_application.chamamembership')),
                ('chama', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cycles', to='main_application.chama')),
            ],
            options={
                'verbose_name': 'Contribution Cycle',
                'verbose_name_plural': 'Contribution Cycles',
                'db_table': 'contribution_cycles',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Contribution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_method', models.CharField(choices=[('MPESA', 'M-Pesa'), ('BANK', 'Bank Transfer'), ('CASH', 'Cash'), ('CARD', 'Card Payment')], max_length=20)),
                ('transaction_reference', models.CharField(max_length=100, unique=True)),
                ('mpesa_receipt_number', models.CharField(blank=True, max_length=50)),
                ('payment_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20)),
                ('late_payment', models.BooleanField(default=False)),
                ('penalty_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contributions', to='main_application.chamamembership')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recorded_contributions', to=settings.AUTH_USER_MODEL)),
                ('cycle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contributions', to='main_application.contributioncycle')),
            ],
            options={
                'verbose_name': 'Contribution',
                'verbose_name_plural': 'Contributions',
                'db_table': 'contributions',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('loan_number', models.CharField(max_length=50, unique=True)),
                ('principal_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('interest_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('interest_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('balance', models.DecimalField(decimal_places=2, max_digits=12)),
                ('repayment_period_months', models.PositiveIntegerField()),
                ('application_date', models.DateField(auto_now_add=True)),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('disbursement_date', models.DateField(blank=True, null=True)),
                ('expected_completion_date', models.DateField()),
                ('actual_completion_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Approval'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('DISBURSED', 'Disbursed'), ('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('DEFAULTED', 'Defaulted')], default='PENDING', max_length=20)),
                ('purpose', models.TextField()),
                ('rejection_reason', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approved_loans', to=settings.AUTH_USER_MODEL)),
                ('chama', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loans', to='main_application.chama')),
                ('guarantor_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='guaranteed_loans_1', to='main_application.chamamembership')),
                ('guarantor_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='guaranteed_loans_2', to='main_application.chamamembership')),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loans', to='main_application.chamamembership')),
            ],
            options={
                'verbose_name': 'Loan',
                'verbose_name_plural': 'Loans',
                'db_table': 'loans',
                'ordering': ['-application_date'],
            },
        ),
        migrations.CreateModel(
            name='LoanRepayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_method', models.CharField(choices=[('MPESA', 'M-Pesa'), ('BANK', 'Bank Transfer'), ('CASH', 'Cash'), ('DEDUCTION', 'Payout Deduction')], max_length=20)),
                ('transaction_reference', models.CharField(max_length=100)),
                ('payment_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='COMPLETED', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('loan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repayments', to='main_application.loan')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recorded_repayments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Loan Repayment',
                'verbose_name_plural': 'Loan Repayments',
                'db_table': 'loan_repayments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('meeting_number', models.PositiveIntegerField()),
                ('scheduled_date', models.DateTimeField()),
                ('actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('actual_end_time', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(max_length=255)),
                ('agenda', models.TextField()),
                ('minutes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('ONGOING', 'Ongoing'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='SCHEDULED', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('chama', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='main_application.chama')),
                ('secretary', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='meetings_recorded', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Meeting',
                'verbose_name_plural': 'Meetings',
                'db_table': 'meetings',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='MeetingAttendance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('PRESENT', 'Present'), ('ABSENT', 'Absent'), ('EXCUSED', 'Excused'), ('LATE', 'Late')], default='ABSENT', max_length=20)),
                ('arrival_time', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance', to='main_application.meeting')),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance', to='main_application.chamamembership')),
            ],
            options={
                'verbose_name': 'Meeting Attendance',
                'verbose_name_plural': 'Meeting Attendance',
                'db_table': 'meeting_attendance',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('CONTRIBUTION_REMINDER', 'Contribution Reminder'), ('PAYOUT_NOTIFICATION', 'Payout Notification'), ('LOAN_APPROVAL', 'Loan Approval'), ('LOAN_REJECTION', 'Loan Rejection'), ('MEETING_REMINDER', 'Meeting Reminder'), ('PAYMENT_RECEIVED', 'Payment Received'), ('LATE_PAYMENT', 'Late Payment'), ('GENERAL', 'General')], max_length=30)),
                ('channel', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push Notification'), ('IN_APP', 'In-App')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('FAILED', 'Failed'), ('READ', 'Read')], default='PENDING', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('chama', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='main_application.chama')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payout',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_method', models.CharField(choices=[('MPESA', 'M-Pesa'), ('BANK', 'Bank Transfer'), ('CASH', 'Cash'), ('CHEQUE', 'Cheque')], max_length=20)),
                ('transaction_reference', models.CharField(max_length=100, unique=True)),
                ('mpesa_receipt_number', models.CharField(blank=True, max_length=50)),
                ('scheduled_date', models.DateField()),
                ('actual_payment_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approved_payouts', to=settings.AUTH_USER_MODEL)),
                ('cycle', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='payout', to='main_application.contributioncycle')),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payouts', to='main_application.chamamembership')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='processed_payouts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payout',
                'verbose_name_plural': 'Payouts',
                'db_table': 'payouts',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['phone_number'], name='users_phone_n_a3b1c5_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_email_4b85f2_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['user', 'timestamp'], name='audit_logs_user_id_88267f_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['model_name', 'object_id'], name='audit_logs_model_n_656046_idx'),
        ),
        migrations.AddIndex(
            model_name='chama',
            index=models.Index(fields=['status', 'created_at'], name='chamas_status_a75dcb_idx'),
        ),
        migrations.AddIndex(
            model_name='chama',
            index=models.Index(fields=['name'], name='chamas_name_85d809_idx'),
        ),
        migrations.AddIndex(
            model_name='chamamembership',
            index=models.Index(fields=['chama', 'status'], name='chama_membe_chama_i_ad2e9f_idx'),
        ),
        migrations.AddIndex(
            model_name='chamamembership',
            index=models.Index(fields=['user', 'status'], name='chama_membe_user_id_99a8d9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='chamamembership',
            unique_together={('chama', 'position_in_rotation'), ('chama', 'user')},
        ),
        migrations.AddIndex(
            model_name='contributioncycle',
            index=models.Index(fields=['chama', 'status'], name='contributio_chama_i_e46896_idx'),
        ),
        migrations.AddIndex(
            model_name='contributioncycle',
            index=models.Index(fields=['start_date', 'end_date'], name='contributio_start_d_0296c1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='contributioncycle',
            unique_together={('chama', 'cycle_number')},
        ),
        migrations.AddIndex(
            model_name='contribution',
            index=models.Index(fields=['cycle', 'membership', 'status'], name='contributio_cycle_i_26c0ed_idx'),
        ),
        migrations.AddIndex(
            model_name='contribution',
            index=models.Index(fields=['transaction_reference'], name='contributio_transac_5abadb_idx'),
        ),
        migrations.AddIndex(
            model_name='contribution',
            index=models.Index(fields=['payment_date'], name='contributio_payment_f6dca7_idx'),
        ),
        migrations.AddIndex(
            model_name='loan',
            index=models.Index(fields=['membership', 'status'], name='loans_members_637736_idx'),
        ),
        migrations.AddIndex(
            model_name='loan',
            index=models.Index(fields=['chama', 'status'], name='loans_chama_i_4867e9_idx'),
        ),
        migrations.AddIndex(
            model_name='loan',
            index=models.Index(fields=['loan_number'], name='loans_loan_nu_a48674_idx'),
        ),
        migrations.AddIndex(
            model_name='loanrepayment',
            index=models.Index(fields=['loan', 'payment_date'], name='loan_repaym_loan_id_abc9c3_idx'),
        ),
        migrations.AddIndex(
            model_name='loanrepayment',
            index=models.Index(fields=['transaction_reference'], name='loan_repaym_transac_821837_idx'),
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['chama', 'status'], name='meetings_chama_i_eaea17_idx'),
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['scheduled_date'], name='meetings_schedul_e94640_idx'),
        ),
        migrations.AddIndex(
            model_name='meetingattendance',
            index=models.Index(fields=['meeting', 'status'], name='meeting_att_meeting_dfc382_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='meetingattendance',
            unique_together={('meeting', 'membership')},
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'status'], name='notificatio_user_id_8ab96f_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='notificatio_created_e4c995_idx'),
        ),
        migrations.AddIndex(
            model_name='payout',
            index=models.Index(fields=['membership', 'status'], name='payouts_members_49c2d6_idx'),
        ),
        migrations.AddIndex(
            model_name='payout',
            index=models.Index(fields=['scheduled_date'], name='payouts_schedul_b277f9_idx'),
        ),
        migrations.AddIndex(
            model_name='payout',
            index=models.Index(fields=['transaction_reference'], name='payouts_transac_893346_idx'),
        ),
    ]
